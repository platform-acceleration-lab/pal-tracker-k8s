jobs:
- name: build-pack-and-publish
  plan:
  - put: version
    params: {bump: patch}
  - get: source-code
    trigger: true
  - task: compile-test
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pivotaleducation/boot-build
      inputs:
      - name: source-code
      run:
        path: sh
        args:
          - -exc
          - |
            cd source-code
            service postgresql start
            sudo -u postgres psql -f databases/tracker/create_databases.sql
            flyway -url="jdbc:postgresql://localhost:5432/tracker_test" -locations=filesystem:databases/tracker migrate -user=tracker -password=password

            ./gradlew test
  - task: pack-and-publish
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: pivotaleducation/pack-and-publish
      inputs:
        - name: source-code
        - name: version
      run:
        path: bash
        args:
          - -exc
          - |
            source /opt/resource/common.sh
            start_docker "5" "5" "" ""

            BUILD_NUMBER=`cat version/number`

            cd source-code
            ./gradlew bootBuildImage --imageName=((DOCKER_HUB_USERNAME))/pal-tracker:build-${BUILD_NUMBER}
            docker login -u ((DOCKER_HUB_USERNAME)) -p ((DOCKER_HUB_PASSWORD))
            docker push ((DOCKER_HUB_USERNAME))/pal-tracker:build-${BUILD_NUMBER}
- name: migrate-review-db
  plan:
  - get: source-code
    trigger: true
    passed:
    - build-pack-and-publish
  - get: version
    passed:
    - build-pack-and-publish
  - task: migrate-db
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pivotaleducation/migrate-db-k8s
      inputs:
      - name: source-code
      - name: version
      run:
        path: sh
        args:
          - -exc
          - |
            mkdir -p ~/.kube
            echo '((KUBECONFIG))' > ~/.kube/config

            cd source-code

            kubectl port-forward --namespace review svc/tracker-db-postgresql 15432:5432 &
            pid=$!

            export REVIEW_DB_PASSWORD=$(kubectl get secret --namespace review tracker-db-postgresql -o jsonpath="{.data.postgresql-password}" | base64 --decode)
            flyway -url="jdbc:postgresql://localhost:15432/((REVIEW_DB_NAME))" -locations=filesystem:databases/tracker migrate -user=((REVIEW_DB_USER)) -password="$REVIEW_DB_PASSWORD"
            success=$?

            kill $pid

            return $success
- name: deploy-to-review
  plan:
  - get: source-code
    trigger: true
    passed:
    - build-pack-and-publish
    - migrate-review-db
  - get: version
    passed:
    - build-pack-and-publish
  - task: deploy-to-review
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pivotaleducation/deploy-to-k8s-1.19
      inputs:
      - name: source-code
      - name: version
      run:
        path: sh
        args:
          - -exc
          - |
            mkdir -p ~/.kube
            echo '((KUBECONFIG))' > ~/.kube/config

            BUILD_NUMBER=`cat version/number`

            cd source-code
            grep "concourse.run_number" k8s/environments/review/deployment.yaml
            sed -i "s/concourse.run_number/${BUILD_NUMBER}/g" k8s/environments/review/deployment.yaml
            kubectl apply -k k8s/environments/review
            kubectl rollout status deployment/pal-tracker-review --watch --timeout=5m --namespace=review
resources:
- name: source-code
  type: git
  source:
    uri: ((GITHUB_REPO_URL))
    branch: main
- name: version
  type: semver
  source:
    initial_version: "0.0.1"
    driver: git
    uri: ((GITHUB_REPO_URL))
    branch: build
    file: number
    username: ((GITHUB_USERNAME))
    password: ((GITHUB_PASSWORD))